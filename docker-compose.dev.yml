version: '3.4'

x-logging: &_logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "10"

x-node-base: &_node-base
  build:
    target: gis_dev
    args:
      - http_proxy
    context: .
    dockerfile: Dockerfile.node
    network: localdev_default
  command: ["app-npm", "gosu", "node", "npm", "run", "dev"]
  image: gis-dev-node
  networks:
    app:
    localdev:
    nginx:
  restart: always

networks:
  app:
  localdev:
    external:
      name: localdev_default
  nginx:
    external:
      name: nginx

volumes:
  npm-cache:
  pgdata:

services:
  postgresql:
    build:
      args:
        - http_proxy
      context: .
      dockerfile: Dockerfile.postgresql
      network: localdev_default
    #command: /sbin/my_init
    env_file:
      - ./.env.defaults
    environment:
      - PGDATA=/var/lib/postgresql/data
    image: gis-postgresql
    labels:
      - com.brainfood.docker.localdev.target_user=postgres
      - com.brainfood.docker.localdev.tool.pg_dump
      - com.brainfood.docker.localdev.tool.psql
    logging:
      <<: *_logging
    networks:
      - app
    volumes:
      - /srv/docker/gis/postgresql/data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    volumes:
      - /srv/docker/media.getty.edu/mirror:/data
    ports:
      - "9000:9000"
    networks:
      - default
      - nginx
    environment:
      - VIRTUAL_HOST=s3.${VHOST_SUFFIX}
      - VIRTUAL_PORT=9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    command: server /data

  cantaloupe:
    depends_on:
      - minio
    image: lyrasis/cantaloupe:latest
    environment:
      CANTALOUPE_UID: ${MAP_UID}
      CANTALOUPE_GID: ${MAP_GID}
      DELEGATE_SCRIPT_ENABLED: "true"
      ENDPOINT_ADMIN_ENABLED: "false"
      PRINT_STACK_TRACE_ON_ERROR_PAGES: "false"
      ENDPOINT_IIIF_1_ENABLED: "false"
      ENDPOINT_IIIF_2_ENABLED: "true"
      ENDPOINT_API_ENABLED: "false"
      #SOURCE_STATIC: "HttpSource"
      #
      CACHE_SERVER_TTL_SECONDS: "1296000"
      CACHE_SERVER_WORKER_INTERVAL: "3600"
      CACHE_SERVER_SOURCE_ENABLED: "true"
      CACHE_SERVER_DERIVATIVE_ENABLED: "true"
      CACHE_SERVER_DERIVATIVE: "FilesystemCache"
      CACHE_SERVER_RESOLVE_FIRST: "false"

      JAVA_OPTS: "-Xmx2g"
      PROCESSOR_JP2: "OpenJpegProcessor"
      PROCESSOR_STREAM_RETRIEVAL_STRATEGY: "CacheStrategy"
      LOG_APPLICATION_LEVEL: "warn"

      SOURCE_DELEGATE: "true"
      FILESYSTEMSOURCE_LOOKUP_STRATEGY: "ScriptLookupStrategy"

      HTTPSOURCE_LOOKUP_STRATEGY: "ScriptLookupStrategy"
      HTTPSOURCE_REQUEST_TIMEOUT: "60"

      S3SOURCE_LOOKUP_STRATEGY: "ScriptLookupStrategy"
      S3SOURCE_ACCESS_KEY_ID: "minio"
      S3SOURCE_SECRET_KEY: "minio123"
      S3SOURCE_ENDPOINT: "http://minio:9000"

      VIRTUAL_HOST: cantaloupe.${VHOST_SUFFIX}
      VIRTUAL_PORT: 8182
    networks:
      - default
      - nginx
    volumes:
      - ./delegates.rb:/cantaloupe/delegates.rb:ro
      - /srv/docker/gis/cantaloupe/cache:/var/cache/cantaloupe
      - /srv/docker/media.getty.edu/mirror:/srv/mirror:ro

  geoserver:
    build:
      args:
        - http_proxy
        - MAVEN_REPO_MIRROR
      context: .
      dockerfile: Dockerfile.geoserver
      network: localdev_default
    depends_on:
      - postgresql
    environment:
      - DOCKER_HOST_IP=/var/run/docker.sock
      - VIRTUAL_HOST=geoserver.${VHOST_SUFFIX}
      - VIRTUAL_PORT=8080
      - NGINX_BASE_URL=http://geoserver.${VHOST_SUFFIX}
    image: gis-geoserver
    labels:
      - com.brainfood.docker.localdev.tool.gs-shell=/usr/local/geoserver-shell/gs-shell
      - com.brainfood.docker.localdev.tool.gs-shell.target_pwd=relative
    logging:
      <<: *_logging
    networks:
      nginx:
      app:
        aliases:
          - geonode
    ports:
      - 8080
    volumes:
      - ./:/srv/app:ro
#      - ./config/epsg_overrides.properties:/geoserver_data/data/user_projections/epsg_overrides.properties:ro

  gdal:
    build:
      args:
        - http_proxy
      context: .
      dockerfile: Dockerfile.gdal
      network: localdev_default
    depends_on:
      - postgresql
    env_file:
      - ./.env.defaults
    environment:
      - PG_USE_COPY=1
      - OGR_ENABLE_PARTIAL_REPROJECTION=true
    image: gis-gdal
    labels:
      - com.brainfood.docker.localdev.target_pwd=relative
      - com.brainfood.docker.localdev.target_user=hostuser
      - com.brainfood.docker.localdev.tool.ogrinfo
      - com.brainfood.docker.localdev.tool.ogr2ogr
      - com.brainfood.docker.localdev.tool.osm2pgsql
      - com.brainfood.docker.localdev.tool.shp2pgsql
      - com.brainfood.docker.localdev.tool.python
      - com.brainfood.docker.localdev.tool.read_location_data=/srv/app/android_location_converter/read_location_data.py
    networks:
      - app
    volumes:
      - .:/srv/app
    working_dir: /srv/app

  gis-api:
    <<: *_node-base
    environment:
      VHOST_SUFFIX:
      VIRTUAL_HOST: api.${VHOST_SUFFIX}
    volumes:
      - npm-cache:/home/node/.npm/_cacache
      - ./gis-api:/srv/app
      - ./data/exports:/srv/app/exports
    working_dir: /srv/app

  web-frontend:
    <<: *_node-base
    environment:
      GIS_BUILD_TARGET:
      GIS_GA_ID:
      HOST: 0.0.0.0
      VHOST_SUFFIX:
      VIRTUAL_HOST: www.${VHOST_SUFFIX},${VHOST_SUFFIX}
    volumes:
      - npm-cache:/home/node/.npm/_cacache
      - .:/srv/app
      - ./gis-frontend:/srv/app/git-frontend
    working_dir: /srv/app/git-frontend

  node:
    <<: *_node-base
    command: ["sleep", "infinity"]
    depends_on:
      - postgresql
    environment:
      GIS_BUILD_TARGET:
      VHOST_SUFFIX:
    labels:
      - com.brainfood.docker.localdev.target_pwd=relative
      - com.brainfood.docker.localdev.target_user=node
      - com.brainfood.docker.localdev.tool.npm
      - com.brainfood.docker.localdev.tool.gis-iiif-loader=/srv/app/gis-iiif-loader/iiif-loader.js
    volumes:
      - npm-cache:/home/node/.npm/_cacache
      - .:/srv/app
    working_dir: /srv/app
